# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - master

resources:
  - repo: self

variables:
#- group: Container Journey
  # Agent VM image name
- name: vmImageName
  value: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - checkout: self
            persistCredentials: true
            clean: true

          - bash: |
              curl $BEDROCK_BUILD_SCRIPT > build.sh
              chmod +x ./build.sh
            displayName: Download Bedrock orchestration script
            env:
              BEDROCK_BUILD_SCRIPT: https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh

          - task: ShellScript@2
            displayName: Validate fabrikate definitions
            inputs:
              scriptPath: build.sh
            condition: eq(variables['Build.Reason'], 'PullRequest')
            env:
              VERIFY_ONLY: 1

          - task: ShellScript@2
            displayName: Transform fabrikate definitions and publish to YAML manifests to repo
            inputs:
              scriptPath: build.sh
            condition: ne(variables['Build.Reason'], 'PullRequest')
            env:
              ACCESS_TOKEN_SECRET: $(ACCESS_TOKEN)
              COMMIT_MESSAGE: $(Build.SourceVersionMessage)
              REPO: $(MANIFEST_REPO)
              BRANCH_NAME: $(Build.SourceBranchName)

          # - bash: |
          #     cd "$HOME"/azure-voting-app
          #     commitId=$(Build.SourceVersion)
          #     commitId=$(echo "${commitId:0:7}")
          #     latest_commit=$(git rev-parse --short HEAD)
          #     VERSION_TO_DOWNLOAD=$(curl -s "https://api.github.com/repos/CatalystCode/spk/releases/latest" | grep "tag_name" | sed -E 's/.*"([^"]+)".*/\1/')
          #     echo "Downloading SPK version $VERSION_TO_DOWNLOAD" && wget "https://github.com/CatalystCode/spk/releases/download/$VERSION_TO_DOWNLOAD/spk-linux"
          #     chmod +x ./spk-linux
          #     ./spk-linux deployment create -n $(ACCOUNT_NAME) -k $(ACCOUNT_KEY) -t $(TABLE_NAME) -p $(PARTITION_KEY) --p3 $(Build.BuildId) --hld-commit-id $commitId --manifest-commit-id $latest_commit
          #   displayName: Update manifest pipeline details in Spektate db
